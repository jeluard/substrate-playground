name: Continuous Deployment base templates staging

on:
  push:
    branches:
      - develop
    paths:
      - '.github/workflows/cd-staging-base-templates.yml'
      - 'templates/**'

env:
  GKE_CLUSTER: susbtrate-playground-staging
  GKE_ZONE: us-central1-a
  DOCKER_BUILDKIT: 1

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      # https://github.com/actions/checkout
      - uses: actions/checkout@v2
      - uses: GoogleCloudPlatform/github-actions/setup-gcloud@master
        with:
          # GCLOUD_KEY is the base64 of the gcloud service account JSON file
          # Get the JSON file from https://console.cloud.google.com/iam-admin/serviceaccounts?authuser=1&hl=fr&project=substrateplayground-252112&folder=&organizationId=&supportedpurview=project
          # ... -> Actions -> Create Key
          # then base64 substrateplayground-XXX.json | tr -d \\n
          service_account_key: ${{ secrets.GCLOUD_KEY }}
          export_default_credentials: true
          project_id: ${{ secrets.GKE_PROJECT }}
      - run: gcloud --quiet auth configure-docker
      - run: gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"
      - run: echo "::set-env name=ACCESS_TOKEN::$(gcloud auth print-access-token)"

      - uses: docker/build-push-action@v1 # https://github.com/docker/build-push-action
        with:
          username: oauth2accesstoken
          password: ${{ env.ACCESS_TOKEN }}
          path: templates
          dockerfile: templates/Dockerfile.base
          repository: substrateplayground-252112/jeluard/substrate-playground-template-base
          registry: gcr.io
          tags: latest
          add_git_labels: true
          tag_with_ref: true
          tag_with_sha: true

      - uses: docker/build-push-action@v1 # https://github.com/docker/build-push-action
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          path: templates
          dockerfile: templates/Dockerfile.base
          repository: paritytech/substrate-playground-template-base
          tags: latest
          add_git_labels: true
          tag_with_ref: true
          tag_with_sha: true

# TODO
# Inform all dependents repos that the base image is updated via a PR
# Needs to have local repo access to remote repos
# See https://github.com/paritytech/substrate-playground/issues/145

      - uses: docker/build-push-action@v1
        with:
          username: oauth2accesstoken
          password: ${{ env.ACCESS_TOKEN }}
          path: templates
          dockerfile: templates/Dockerfile.theia-base
          repository: substrateplayground-252112/jeluard/substrate-playground-template-theia-base
          registry: gcr.io
          tags: latest
          add_git_labels: true
          tag_with_ref: true
          tag_with_sha: true

      - uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          path: templates
          dockerfile: templates/Dockerfile.theia-base
          repository: paritytech/substrate-playground-template-theia-base
          tags: latest
          add_git_labels: true
          tag_with_ref: true
          tag_with_sha: true

      - run: echo ::set-output name=sha::sha-${GITHUB_SHA::7}
        id: env

      - name: Update Dockerfile.template base image
        run: sed -i 's/:sha-[^. ]* /:${{ steps.env.outputs.sha }} /g' templates/Dockerfile.template

      - uses: EndBug/add-and-commit@v4
        with:
          message: ":bookmark: update base template image"
          add: "templates/Dockerfile.template"
          tag: base-templates-${{ steps.env.outputs.sha }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

# TODO
# Rebuild all templates
# Need to iterate all templates in conf/k8s/overlays/staging/templates
# And access the right image
#
#    - name: Trigger playground inclusion
#      uses: peter-evans/repository-dispatch@v1
#      with:
#        token: ${{ secrets.REPO_ACCESS_TOKEN }}
#        event-type: template-updated
#        client-payload: '{"id": "TO_FILL", "image": "TO_FILL"}'

# TODO: tests new image
# if fail, rollback
#if succeed, take screenshots

      - name: Create Release
        uses: actions/create-release@v1
        with:
          tag_name: base-templates-${{ steps.env.outputs.sha }}
          release_name: ${{ steps.env.outputs.sha }}
          body: |
            Base templates release:
            - paritytech/substrate-playground-template-base:${{ steps.env.outputs.sha }}
            - paritytech/substrate-playground-template-theia-base:${{ steps.env.outputs.sha }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}