#
# Continuously tests playground source code
#

name: Continuous Integration playground

on:
  push:
    branches:
      - develop
    paths:
      - '.github/workflows/ci-playground.yml'
      - 'backend/**'
      - 'frontend/**'
  pull_request:
    branches:
      - develop
    paths:
      - '.github/workflows/ci-playground.yml'
      - 'backend/**'
      - 'frontend/**'

jobs:
  test-frontend:
    runs-on: ubuntu-latest
    if: "! contains(github.event.head_commit.message, '[CI Skip]')"
    defaults:
      run:
        working-directory: ./frontend
    steps:
      - uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: "14"

      - name: Install
        run: yarn install --check-files

      - name: Lint
        run: yarn lint
        continue-on-error: true

      - name: Audit
        run: yarn audit
        continue-on-error: true

      - name: Build
        run: yarn build

  test-backend:
    runs-on: ubuntu-latest
    if: "! contains(github.event.head_commit.message, '[CI Skip]')"
    steps:

      - uses: actions/checkout@v2

      # Workaround https://github.com/actions-rs/toolchain/issues/110
      - run: cp backend/rust-toolchain .

      - uses: actions-rs/toolchain@v1.0.7
        with:
          profile: minimal
          override: true
          components: rustfmt, clippy

      - name: Test backend
        uses: actions-rs/cargo@v1
        with:
          command: test
          # Workaround https://github.com/actions-rs/cargo/issues/86
          args: --manifest-path backend/Cargo.toml

      - name: Check format
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          # Workaround https://github.com/actions-rs/cargo/issues/86
          args: --manifest-path backend/Cargo.toml --all -- --check

      - name: Check lints
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          # Workaround https://github.com/actions-rs/cargo/issues/86
          args: --manifest-path backend/Cargo.toml -- -D warnings -A deprecated

  docker:
    runs-on: ubuntu-latest
    if: "! contains(github.event.head_commit.message, '[CI Skip]')"
    steps:

      - uses: actions/checkout@v2

      - name: Install dnsmasq
        run: sudo systemctl disable systemd-resolved && sudo systemctl stop systemd-resolved && sudo rm /etc/resolv.conf && echo nameserver 8.8.8.8 | sudo tee /etc/resolv.conf && sudo apt-get install -y dnsmasq

      - name: Install dnsmasq
        run:  sudo bash -c 'echo "address=/.test/127.0.0.1" >> /etc/dnsmasq.conf' && sudo mkdir -v /etc/resolver && sudo bash -c 'echo "nameserver 127.0.0.1" > /etc/resolver/test' && sudo systemctl restart dnsmasq

      - uses: docker/setup-buildx-action@v1
        with:
          install: true

      - name: Build backend images
        run: make build-backend-docker-images

      - uses: AbsaOSS/k3d-action@v2
        with:
          cluster-name: "pg-cluster"
          args: >-
            --k3s-arg '--tls-san=127.0.0.1@server:*'
            --k3s-arg '--no-deploy=traefik@server:*'
            --k3s-node-label "cloud.google.com/gke-nodepool=default-workspace@server:0"
            --port 80:80@loadbalancer
            --port 443:443@loadbalancer

      - name: Set environment
        id: env
        run: |
          echo ::set-output name=sha::sha-${GITHUB_SHA::7}

      - name: Set up Kustomize
        run: |-
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv3.6.1/kustomize_v3.6.1_linux_amd64.tar.gz
          tar zxvf kustomize*
          chmod u+x ./kustomize
        working-directory: conf/k8s/overlays/dev

      - name: Update version
        run: |-
          ./kustomize edit set image paritytech/substrate-playground-backend-api:${{ steps.env.outputs.sha }}
          ./kustomize edit set image paritytech/substrate-playground-backend-ui:${{ steps.env.outputs.sha }}
        working-directory: conf/k8s/overlays/dev

      - name: Deploy playground
        run: SKIP_ACK=1 make k8s-deploy-playground

      - name: Run tests
        run: yarn && yarn test
        working-directory: ./e2e
        timeout-minutes: 3
        env:
          ENV: dev
