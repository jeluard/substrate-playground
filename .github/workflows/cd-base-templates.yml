name: Continuous Deployment base templates

on:
  push:
    branches:
      - develop
      - master
    paths:
      - ".github/workflows/cd-base-templates.yml"
      - "templates/**"

env:
  DOCKER_BUILDKIT: 1

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Set env to staging
        if: endsWith(github.ref, '/develop')
        run: |
          echo "::set-env name=ENVIRONMENT::staging"

      - name: Set env to production
        if: endsWith(github.ref, '/master')
        run: |
          echo "::set-env name=ENVIRONMENT::production"

      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install yq
        run: |
          python -m pip install --upgrade pip
          pip install yq

      - uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          path: templates
          dockerfile: templates/Dockerfile.base
          repository: paritytech/substrate-playground-template-base
          tags: latest
          add_git_labels: true
          tag_with_ref: true
          tag_with_sha: true

      - uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          path: templates
          dockerfile: templates/Dockerfile.theia-base
          repository: paritytech/substrate-playground-template-theia-base
          tags: latest
          add_git_labels: true
          tag_with_ref: true
          tag_with_sha: true

      - run: echo ::set-output name=sha::sha-${GITHUB_SHA::7}
        id: env

      - name: Update base template version
        run: |-
          t=$(mktemp)
          cat .github/workflows/event-template-updated.yml | yq -y ".env.BASE_TEMPLATE_VERSION = \"${{ steps.env.outputs.sha }}\"" > ${t} && mv ${t} .github/workflows/event-template-updated.yml

      - uses: EndBug/add-and-commit@v4
        with:
          message: ":bookmark: yee shall thurst into a new version of base templates"
          add: .github/workflows/event-template-updated.yml
          tag: base-templates-${{ steps.env.outputs.sha }}
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}

      - name: Create Release
        uses: actions/create-release@v1
        with:
          tag_name: base-templates-${{ steps.env.outputs.sha }}
          release_name: ${{ steps.env.outputs.sha }}
          body: |
            Base templates release:
            - paritytech/substrate-playground-template-base:${{ steps.env.outputs.sha }}
            - paritytech/substrate-playground-template-theia-base:${{ steps.env.outputs.sha }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Go through existing templates and trigger template rebuilds using newly created base templates

  list-existing-templates:
    needs: build-and-push
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-templates.outputs.matrix }}
    steps:
      - name: Set env to staging
        if: endsWith(github.ref, '/develop')
        run: |
          echo "::set-env name=ENVIRONMENT::staging"

      - name: Set env to production
        if: endsWith(github.ref, '/master')
        run: |
          echo "::set-env name=ENVIRONMENT::production"

      - uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install yq
        run: |
          python -m pip install --upgrade pip
          pip install yq

      - id: set-templates
        run: |
          JSON="{\"include\":["
          for FILE in "conf/k8s/overlays/$ENVIRONMENT/templates"/*
          do
            ID=${FILE##*/}
            IMAGE=`cat $FILE | yq .base`
            JSONline="{\"id\": \"$ID\"},"
            JSON="$JSON$JSONline"
          done
          JSON="$JSON]}"

          echo "::set-output name=matrix::$( echo "$JSON" )"

  rebuild-existing-templates:
    needs: list-existing-templates
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.list-existing-templates.outputs.matrix)}}
    steps:
      - name: Rebuild template ${{ matrix.id }}
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.PAT_TOKEN }}
          event-type: template-updated
          client-payload: '{"id": "${{ matrix.id }}"}'
