name: Continuous Deployment base templates

on:
  push:
    branches:
      - develop
    paths:
      - ".github/workflows/cd-base-templates.yml"
      - "templates/**"

env:
  DOCKER_BUILDKIT: 1

jobs:
  build-and-push-base-templates:
    runs-on: ubuntu-latest
    steps:
      - name: Set env
        id: env
        run: echo ::set-output name=sha::sha-${GITHUB_SHA::7}

      - uses: actions/checkout@v2
        with:
          token: ${{ secrets.PAT_TOKEN }}

      - name: Prepare labels
        id: prep
        run: |
            VERSION=edge
            if [[ $GITHUB_REF == refs/tags/* ]]; then
              VERSION=${GITHUB_REF#refs/tags/}
            elif [[ $GITHUB_REF == refs/heads/* ]]; then
              VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
            elif [[ $GITHUB_REF == refs/pull/* ]]; then
              VERSION=pr-${{ github.event.number }}
            fi
            echo ::set-output name=version::${VERSION}
            echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')

      - name: Prepare labels template-base
        id: prep-base
        run: |
            VERSION=edge
            if [[ $GITHUB_REF == refs/tags/* ]]; then
              VERSION=${GITHUB_REF#refs/tags/}
            elif [[ $GITHUB_REF == refs/heads/* ]]; then
              VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
            elif [[ $GITHUB_REF == refs/pull/* ]]; then
              VERSION=pr-${{ github.event.number }}
            fi
            DOCKER_IMAGE=paritytech/substrate-playground-template-base
            TAGS="${DOCKER_IMAGE}:latest,${DOCKER_IMAGE}:${VERSION},${DOCKER_IMAGE}:sha-${GITHUB_SHA::7}"
            echo ::set-output name=tags::${TAGS}

      - name: Prepare labels template-theia-base
        id: prep-theia-base
        run: |
            VERSION=edge
            if [[ $GITHUB_REF == refs/tags/* ]]; then
              VERSION=${GITHUB_REF#refs/tags/}
            elif [[ $GITHUB_REF == refs/heads/* ]]; then
              VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
            elif [[ $GITHUB_REF == refs/pull/* ]]; then
              VERSION=pr-${{ github.event.number }}
            fi
            DOCKER_IMAGE=paritytech/substrate-playground-template-theia-base
            TAGS="${DOCKER_IMAGE}:latest,${DOCKER_IMAGE}:${VERSION},${DOCKER_IMAGE}:sha-${GITHUB_SHA::7}"
            echo ::set-output name=tags::${TAGS}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1.10.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - uses: docker/build-push-action@v2
        with:
          context: templates
          file: templates/Dockerfile.base
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.prep-base.outputs.tags }}
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
          cache-from: type=registry,ref=paritytech/substrate-playground-template-base:latest
          cache-to: type=inline

      - uses: docker/build-push-action@v2
        with:
          context: templates
          file: templates/Dockerfile.theia-base
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.prep-theia-base.outputs.tags }}
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}
          cache-from: type=registry,ref=paritytech/substrate-playground-template-theia-base:latest
          cache-to: type=inline

      - name: Update .env
        run: sed -i 's/BASE_TEMPLATE_VERSION=sha-[^. ]*/BASE_TEMPLATE_VERSION=${{ steps.env.outputs.sha }}/g' conf/templates/.env

      - run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add conf/templates/.env
          git commit -m ":bookmark: yee shall thurst into a new version of base templates"
          git pull --rebase
          git push
