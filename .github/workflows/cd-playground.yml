#
# Deploy backend/frontend Docker images and update relevant conf.
#
name: Continuous Deployment playground

on:
  workflow_dispatch:
  push:
    branches:
      - develop
    paths:
      - '.github/workflows/cd-playground.yml'
      - 'Makefile'
      - 'backend/**'
      - 'frontend/**'
      - 'conf/k8s/base/**'

env:
  DOCKER_BUILDKIT: 1

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:

      - uses: actions/checkout@v2
        with:
          # Use a specific token so that the commit done further the line triggers other workflows
          token: ${{ secrets.PAT_TOKEN }}

      - name: Set environment
        id: env
        run: |
          echo ::set-output name=sha::sha-${GITHUB_SHA::7}

      - name: Prepare labels
        id: prep
        run: |
            VERSION=edge
            if [[ $GITHUB_REF == refs/tags/* ]]; then
              VERSION=${GITHUB_REF#refs/tags/}
            elif [[ $GITHUB_REF == refs/heads/* ]]; then
              VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
            elif [[ $GITHUB_REF == refs/pull/* ]]; then
              VERSION=pr-${{ github.event.number }}
            fi
            echo ::set-output name=version::${VERSION}
            echo ::set-output name=created::$(date -u +'%Y-%m-%dT%H:%M:%SZ')

      - name: Prepare labels paritytech/substrate-playground-backend-api
        id: prep-api
        run: |
            VERSION=edge
            if [[ $GITHUB_REF == refs/tags/* ]]; then
              VERSION=${GITHUB_REF#refs/tags/}
            elif [[ $GITHUB_REF == refs/heads/* ]]; then
              VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
            elif [[ $GITHUB_REF == refs/pull/* ]]; then
              VERSION=pr-${{ github.event.number }}
            fi
            DOCKER_IMAGE=paritytech/substrate-playground-backend-api
            TAGS="${DOCKER_IMAGE}:latest,${DOCKER_IMAGE}:${VERSION},${DOCKER_IMAGE}:${{ steps.env.outputs.sha }}"
            echo ::set-output name=tags::${TAGS}

      - name: Prepare labels paritytech/substrate-playground-backend-ui
        id: prep-ui
        run: |
            VERSION=edge
            if [[ $GITHUB_REF == refs/tags/* ]]; then
              VERSION=${GITHUB_REF#refs/tags/}
            elif [[ $GITHUB_REF == refs/heads/* ]]; then
              VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
            elif [[ $GITHUB_REF == refs/pull/* ]]; then
              VERSION=pr-${{ github.event.number }}
            fi
            DOCKER_IMAGE=paritytech/substrate-playground-backend-ui
            TAGS="${DOCKER_IMAGE}:latest,${DOCKER_IMAGE}:${VERSION},${DOCKER_IMAGE}:${{ steps.env.outputs.sha }}"
            echo ::set-output name=tags::${TAGS}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1.10.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - uses: docker/build-push-action@v2
        with:
          context: backend
          file: backend/Dockerfile
          build-args: GITHUB_SHA=${{ steps.env.outputs.sha }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.prep-api.outputs.tags }}
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}

      - uses: docker/build-push-action@v2
        with:
          context: frontend
          file: frontend/Dockerfile
          build-args: GITHUB_SHA=${{ steps.env.outputs.sha }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.prep-ui.outputs.tags }}
          labels: |
            org.opencontainers.image.source=${{ github.event.repository.clone_url }}
            org.opencontainers.image.created=${{ steps.prep.outputs.created }}
            org.opencontainers.image.revision=${{ github.sha }}

      - name: Set up Kustomize
        run: |-
          curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/kustomize%2Fv3.6.1/kustomize_v3.6.1_linux_amd64.tar.gz
          tar zxvf kustomize*
          chmod u+x ./kustomize
        working-directory: conf/k8s/overlays/staging

      - name: Update version
        run: |-
          ./kustomize edit set image paritytech/substrate-playground-backend-api:${{ steps.env.outputs.sha }}
          ./kustomize edit set image paritytech/substrate-playground-backend-ui:${{ steps.env.outputs.sha }}
        working-directory: conf/k8s/overlays/staging

      - run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add conf/k8s/overlays/staging/kustomization.yaml
          git commit -m ":bookmark: upon which, hails onto us a new release of Playground"
          git pull --rebase
          git push
